denom <- denom + s
}
r_ix <- num/denom
predictedRatings2 <- c(predictedRatings2, r_ix)
}
predictedRatings2
rmse2 <- sqrt(sum((ratingsMovies-predictedRatings2)^2)/4)
rmse2
for (movie1 in moviesIds){
coeffs <- data.frame(coefficients[, toString(movie1)], rownames(coefficients))
coeffs <- coeffs[order(-coeffs$coef), ]
coeffs <- head(coeffs, 4)
coeffs <- coeffs[-1,]
mostSimilarMovies <- coeffs[2]
mostSimilarMoviesSimilarities <- coeffs[1]
num <- 0
denom <- 0
for(row in 1:nrow(coeffs)){
#print(coeffs[row,])
s <- coeffs[row, 1]
print(s)
id <- coeffs[row, 2]
r <- U2withCoefficients[toString(id), "191"]
print(r)
if (!is.na(r)){
num <- num + s*r
}
denom <- denom + s
}
r_ix <- num/denom
predictedRatings2 <- c(predictedRatings2, r_ix)
}
for (movie1 in moviesIds){
coeffs <- data.frame(coefficients[, toString(movie1)], rownames(coefficients))
coeffs <- coeffs[order(-coeffs$coef), ]
coeffs <- head(coeffs, 4)
coeffs <- coeffs[-1,]
mostSimilarMovies <- coeffs[2]
mostSimilarMoviesSimilarities <- coeffs[1]
num <- 0
denom <- 0
print(movie)
for(row in 1:nrow(coeffs)){
#print(coeffs[row,])
s <- coeffs[row, 1]
print(s)
id <- coeffs[row, 2]
r <- U2withCoefficients[toString(id), "191"]
print(r)
if (!is.na(r)){
num <- num + s*r
}
denom <- denom + s
}
r_ix <- num/denom
predictedRatings2 <- c(predictedRatings2, r_ix)
}
for (movie1 in moviesIds){
coeffs <- data.frame(coefficients[, toString(movie1)], rownames(coefficients))
coeffs <- coeffs[order(-coeffs$coef), ]
coeffs <- head(coeffs, 4)
coeffs <- coeffs[-1,]
mostSimilarMovies <- coeffs[2]
mostSimilarMoviesSimilarities <- coeffs[1]
num <- 0
denom <- 0
print(movie)
for(row in 1:nrow(coeffs)){
#print(coeffs[row,])
s <- coeffs[row, 1]
print(s)
id <- coeffs[row, 2]
print(toString(id))
r <- U2withCoefficients[toString(id), "191"]
print(r)
if (!is.na(r)){
num <- num + s*r
}
denom <- denom + s
}
r_ix <- num/denom
predictedRatings2 <- c(predictedRatings2, r_ix)
}
for (movie1 in moviesIds){
coeffs <- data.frame(coefficients[, toString(movie1)], rownames(coefficients))
coeffs <- coeffs[order(-coeffs$coef), ]
coeffs <- head(coeffs, 4)
coeffs <- coeffs[-1,]
mostSimilarMovies <- coeffs[2]
mostSimilarMoviesSimilarities <- coeffs[1]
num <- 0
denom <- 0
print(movie)
print(coeffs)
for(row in 1:nrow(coeffs)){
#print(coeffs[row,])
s <- coeffs[row, 1]
print(s)
id <- coeffs[row, 2]
print(toString(id))
r <- U2withCoefficients[toString(id), "191"]
print(r)
if (!is.na(r)){
num <- num + s*r
}
denom <- denom + s
}
r_ix <- num/denom
predictedRatings2 <- c(predictedRatings2, r_ix)
}
for (movie1 in moviesIds){
print(movie1)
coeffs <- data.frame(coefficients[, toString(movie1)], rownames(coefficients))
coeffs <- coeffs[order(-coeffs$coef), ]
coeffs <- head(coeffs, 4)
coeffs <- coeffs[-1,]
mostSimilarMovies <- coeffs[2]
mostSimilarMoviesSimilarities <- coeffs[1]
num <- 0
denom <- 0
print(movie)
print(coeffs)
for(row in 1:nrow(coeffs)){
#print(coeffs[row,])
s <- coeffs[row, 1]
print(s)
id <- coeffs[row, 2]
print(toString(id))
r <- U2withCoefficients[toString(id), "191"]
print(r)
if (!is.na(r)){
num <- num + s*r
}
denom <- denom + s
}
r_ix <- num/denom
predictedRatings2 <- c(predictedRatings2, r_ix)
}
for (movie1 in moviesIds){
print(movie1)
coeffs <- data.frame(coefficients[, toString(movie1)], rownames(coefficients))
coeffs <- coeffs[order(-coeffs$coef), ]
coeffs <- head(coeffs, 4)
coeffs <- coeffs[-1,]
mostSimilarMovies <- coeffs[2]
mostSimilarMoviesSimilarities <- coeffs[1]
num <- 0
denom <- 0
print(coeffs)
for(row in 1:nrow(coeffs)){
#print(coeffs[row,])
s <- coeffs[row, 1]
print(s)
id <- coeffs[row, 2]
print(toString(id))
r <- U2withCoefficients[toString(id), "191"]
print(r)
if (!is.na(r)){
num <- num + s*r
}
denom <- denom + s
}
r_ix <- num/denom
predictedRatings2 <- c(predictedRatings2, r_ix)
}
predictedRatings2 <- c()
predictedRatings2
for (movie1 in moviesIds){
print(movie1)
coeffs <- data.frame(coefficients[, toString(movie1)], rownames(coefficients))
coeffs <- coeffs[order(-coeffs$coef), ]
coeffs <- head(coeffs, 4)
coeffs <- coeffs[-1,]
mostSimilarMovies <- coeffs[2]
mostSimilarMoviesSimilarities <- coeffs[1]
num <- 0
denom <- 0
print(coeffs)
for(row in 1:nrow(coeffs)){
#print(coeffs[row,])
s <- coeffs[row, 1]
print(s)
id <- coeffs[row, 2]
print(toString(id))
r <- U2withCoefficients[toString(id), "191"]
print(r)
if (!is.na(r)){
num <- num + s*r
}
denom <- denom + s
}
r_ix <- num/denom
predictedRatings2 <- c(predictedRatings2, r_ix)
}
predictedRatings2
for (movie1 in moviesIds){
print(movie1)
coeffs <- data.frame(coefficients[, toString(movie1)], rownames(coefficients))
coeffs <- coeffs[order(-coeffs$coef), ]
coeffs <- head(coeffs, 4)
coeffs <- coeffs[-1,]
mostSimilarMovies <- coeffs[2]
mostSimilarMoviesSimilarities <- coeffs[1]
num <- 0
denom <- 0
print(coeffs)
for(row in 1:nrow(coeffs)){
#print(coeffs[row,])
s <- coeffs[row, 1]
print(s)
id <- coeffs[row, 2]
print(toString(id))
r <- U2withCoefficients[toString(id), "191"]
print(r)
if (!is.na(r)){
num <- num + s*r
}
denom <- denom + s
}
r_ix <- num/denom
print(r_ix)
predictedRatings2 <- c(predictedRatings2, r_ix)
}
predictedRatings2
#similarUsers_sampled <- sample_n(similarUsers_df, 5)
similarUsers_sampled <- head(similarUsers_df, 5)
ids_sampled <- similarUsers_sampled[1]
similarities_sampled <- similarUsers_sampled[2]
columnNames2 <- moviesUser191
index <- which(ratings$userId == 191 & ratings$movieId == 150)
ratings[index, "rating"] <- NA
index <- which(ratings$userId == 191 & ratings$movieId == 296)
ratings[index, "rating"] <- NA
index <- which(ratings$userId == 191 & ratings$movieId == 380)
ratings[index, "rating"] <- NA
index <- which(ratings$userId == 191 & ratings$movieId == 590)
ratings[index, "rating"] <- NA
moviesIds <- c(150, 296, 380, 590)
ratingsMovies <- c(4.0, 5.0, 3.0, 4.0)
indicesMoviesUser191 <- which(ratings$userId == 191)
moviesUser191 <- ratings[indicesMoviesUser191, "movieId"]
similarUsersId <- c(513, 317, 415, 375, 64, 556, 82, 225, 657, 266, 568, 50)
similarities <- c(0.4358974, 0.4033613, 0.3255814, 0.3049645, 0.2753623, 0.2727273, 0.2527473, 0.2420382, 0.2262774, 0.2216216, 0.2105263, 0.2009804)
similarUsers_df <- data.frame(similarUsersId, similarities)
#similarUsers_sampled <- sample_n(similarUsers_df, 5)
similarUsers_sampled <- head(similarUsers_df, 5)
ids_sampled <- similarUsers_sampled[1]
similarities_sampled <- similarUsers_sampled[2]
columnNames2 <- moviesUser191
U <- data.frame(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
for(i in 1:6){
U[i, ] <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
}
colnames(U) <- columnNames2
sixUsers <- rbind(191, ids_sampled)
rowsNames2 <- as.vector(sixUsers[,1])
rownames(U) <- rowsNames2
for (row in 1:nrow(sixUsers)){
userId <- sixUsers[row, ]
ncolumn <- 1
for (movieId in moviesUser191){
index <- which(ratings$userId == userId & ratings$movieId == movieId)
if (length(index) != 0){
rating <- ratings[index, "rating"]
U[row, ncolumn] <- rating
}
if (length(index) == 0){
U[row, ncolumn] <- NA
}
ncolumn <- ncolumn + 1
}
ncolumn <- 1
}
similarUsersOrdered <- similarUsers_sampled[order(-similarities_sampled$similarities), ]
threeMostSimilarUsers <- head(similarUsersOrdered, 3)
r_x <- c()
for(movie in moviesIds){
nom <- 0
denom <- 0
for (row in 1:nrow(threeMostSimilarUsers)){
userId <- threeMostSimilarUsers[row, 1]
s <- threeMostSimilarUsers[row, 2]
r_y <- U[toString(userId), toString(movie)]
nom <- nom + s*r_y
denom <- denom + s
}
r_y <- nom/denom
r_x <- c(r_x, r_y)
}
rmse <- sqrt(sum((ratingsMovies-r_y)^2)/4)
U2 <- t(U)
means <- apply(U2, 1, function(x) mean(x, na.rm=T))
coefficients <- data.frame()
n <- 1
for (movie1 in moviesIds){
r <- c()
x_i <- U2[toString(movie1), ]
mean_x <- means[toString(movie1)]
for (movie2 in moviesUser191){
y_i <- U2[toString(movie2), ]
mean_y <- means[toString(movie2)]
r_i <- (sum((x_i-mean_x)*(y_i-mean_y), na.rm = TRUE))/(sqrt(sum((x_i-mean_x)^2, na.rm = TRUE))*sqrt(sum((y_i-mean_y)^2, na.rm = TRUE)))
r <- c(r, r_i)
}
coefficients <- rbind(coefficients, r)
n <- n+1
}
rownames(coefficients) <- moviesIds
colnames(coefficients) <- moviesUser191
coefficients <- t(coefficients)
U2withCoefficients <- cbind(U2, coefficients)
predictedRatings2 <- c()
for (movie1 in moviesIds){
print(movie1)
coeffs <- data.frame(coefficients[, toString(movie1)], rownames(coefficients))
coeffs <- coeffs[order(-coeffs$coef), ]
coeffs <- head(coeffs, 4)
coeffs <- coeffs[-1,]
mostSimilarMovies <- coeffs[2]
mostSimilarMoviesSimilarities <- coeffs[1]
num <- 0
denom <- 0
print(coeffs)
for(row in 1:nrow(coeffs)){
#print(coeffs[row,])
s <- coeffs[row, 1]
print(s)
id <- coeffs[row, 2]
print(toString(id))
r <- U2withCoefficients[toString(id), "191"]
print(r)
if (!is.na(r)){
num <- num + s*r
}
denom <- denom + s
}
r_ix <- num/denom
print(r_ix)
predictedRatings2 <- c(predictedRatings2, r_ix)
}
rmse2 <- sqrt(sum((ratingsMovies-predictedRatings2)^2)/4)
rmse2
predictedRatings2
index <- which(ratings$userId == 191 & ratings$movieId == 150)
ratings[index, "rating"] <- NA
index <- which(ratings$userId == 191 & ratings$movieId == 296)
ratings[index, "rating"] <- NA
index <- which(ratings$userId == 191 & ratings$movieId == 380)
ratings[index, "rating"] <- NA
index <- which(ratings$userId == 191 & ratings$movieId == 590)
ratings[index, "rating"] <- NA
moviesIds <- c(150, 296, 380, 590)
ratingsMovies <- c(4.0, 5.0, 3.0, 4.0)
indicesMoviesUser191 <- which(ratings$userId == 191)
moviesUser191 <- ratings[indicesMoviesUser191, "movieId"]
similarUsersId <- c(513, 317, 415, 375, 64, 556, 82, 225, 657, 266, 568, 50)
similarities <- c(0.4358974, 0.4033613, 0.3255814, 0.3049645, 0.2753623, 0.2727273, 0.2527473, 0.2420382, 0.2262774, 0.2216216, 0.2105263, 0.2009804)
similarUsers_df <- data.frame(similarUsersId, similarities)
similarUsers_sampled <- sample_n(similarUsers_df, 5)
#similarUsers_sampled <- head(similarUsers_df, 5)
ids_sampled <- similarUsers_sampled[1]
similarities_sampled <- similarUsers_sampled[2]
columnNames2 <- moviesUser191
U <- data.frame(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
for(i in 1:6){
U[i, ] <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
}
colnames(U) <- columnNames2
sixUsers <- rbind(191, ids_sampled)
rowsNames2 <- as.vector(sixUsers[,1])
rownames(U) <- rowsNames2
for (row in 1:nrow(sixUsers)){
userId <- sixUsers[row, ]
ncolumn <- 1
for (movieId in moviesUser191){
index <- which(ratings$userId == userId & ratings$movieId == movieId)
if (length(index) != 0){
rating <- ratings[index, "rating"]
U[row, ncolumn] <- rating
}
if (length(index) == 0){
U[row, ncolumn] <- NA
}
ncolumn <- ncolumn + 1
}
ncolumn <- 1
}
similarUsersOrdered <- similarUsers_sampled[order(-similarities_sampled$similarities), ]
threeMostSimilarUsers <- head(similarUsersOrdered, 3)
r_x <- c()
for(movie in moviesIds){
nom <- 0
denom <- 0
for (row in 1:nrow(threeMostSimilarUsers)){
userId <- threeMostSimilarUsers[row, 1]
s <- threeMostSimilarUsers[row, 2]
r_y <- U[toString(userId), toString(movie)]
nom <- nom + s*r_y
denom <- denom + s
}
r_y <- nom/denom
r_x <- c(r_x, r_y)
}
rmse <- sqrt(sum((ratingsMovies-r_y)^2)/4)
print("User ID 191, 5 random user IDs: ")
print(ids_sampled)
print("Using user-user similarity, User ID 191 will rate the movies as follows:")
print("150: ")
print(r_x[1])
print("296: ")
print(r_x[2])
print("380: ")
print(r_x[3])
print("590: ")
print(r_x[4])
print("RMSE: ")
print(rmse)
U2 <- t(U)
means <- apply(U2, 1, function(x) mean(x, na.rm=T))
coefficients <- data.frame()
n <- 1
for (movie1 in moviesIds){
r <- c()
x_i <- U2[toString(movie1), ]
mean_x <- means[toString(movie1)]
for (movie2 in moviesUser191){
y_i <- U2[toString(movie2), ]
mean_y <- means[toString(movie2)]
r_i <- (sum((x_i-mean_x)*(y_i-mean_y), na.rm = TRUE))/(sqrt(sum((x_i-mean_x)^2, na.rm = TRUE))*sqrt(sum((y_i-mean_y)^2, na.rm = TRUE)))
r <- c(r, r_i)
}
coefficients <- rbind(coefficients, r)
n <- n+1
}
rownames(coefficients) <- moviesIds
colnames(coefficients) <- moviesUser191
coefficients <- t(coefficients)
U2withCoefficients <- cbind(U2, coefficients)
predictedRatings2 <- c()
for (movie1 in moviesIds){
print(movie1)
coeffs <- data.frame(coefficients[, toString(movie1)], rownames(coefficients))
coeffs <- coeffs[order(-coeffs$coef), ]
coeffs <- head(coeffs, 4)
coeffs <- coeffs[-1,]
mostSimilarMovies <- coeffs[2]
mostSimilarMoviesSimilarities <- coeffs[1]
num <- 0
denom <- 0
print(coeffs)
for(row in 1:nrow(coeffs)){
#print(coeffs[row,])
s <- coeffs[row, 1]
print(s)
id <- coeffs[row, 2]
print(toString(id))
r <- U2withCoefficients[toString(id), "191"]
print(r)
if (!is.na(r)){
num <- num + s*r
}
denom <- denom + s
}
r_ix <- num/denom
print(r_ix)
predictedRatings2 <- c(predictedRatings2, r_ix)
}
rmse2 <- sqrt(sum((ratingsMovies-predictedRatings2)^2)/4)
print("User ID 191, 5 random user IDs: ")
print(ids_sampled)
print("Using item-item similarity, User ID 191 will rate the movies as follows:")
print("150: ")
print(predictedRatings2[1])
print("296: ")
print(predictedRatings2[2])
print("380: ")
print(predictedRatings2[3])
print("590: ")
print(predictedRatings2[4])
print("RMSE: ")
print(rmse2)
library(textreuse)
library(stringr)
library(dplyr)
library(lsa)
rm(list=ls())
setwd("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4")
movies <- read.csv("movies.csv", sep = ",", header = TRUE)
ratings <- read.csv("ratings.csv", sep = ",", header = TRUE)
setwd("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies")
joined <- merge(x = ratings, y = movies, by = "movieId", all = TRUE)
usersMovies.df = data.frame(joined$userId, joined$title)
for (i in 1:671){
indices <- which(usersMovies.df[1] == i)
moviesNames <- data.frame(usersMovies.df[indices, 2])[,]
fileName <- paste("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies/user", i, ".csv", sep="")
write.csv(moviesNames, file = fileName, row.names = FALSE)
temp <- read.csv(fileName, sep = ",", skip = 1)
write.csv(temp, file = fileName, row.names = FALSE)
}
files <- list.files("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies", full.names=T)
corpus <- TextReuseCorpus(files, tokenizer = tokenize_ngrams, n = 5, keep_tokens = TRUE)
length(names(corpus))
shingles <- c()
for (name in names(corpus)){
shinglesDocument <- tokens(corpus[[name]])
for (shingle in shinglesDocument){
if (shingle %in% shingles == FALSE){
shingles <- c(shingles, shingle)
}
}
}
