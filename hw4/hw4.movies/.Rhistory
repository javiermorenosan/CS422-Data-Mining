print(movieProfile1)
#print(cosine(avg, movieProfile1))
}
for(row in 1:nrow(movieProfile)){
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
print(movieProfile1)
#print(cosine(avg, movieProfile1))
}
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, ]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
print(movieId)
print(movieProfile1)
#print(cosine(avg, movieProfile1))
}
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
print(movieId)
print(movieProfile1)
#print(cosine(avg, movieProfile1))
}
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
print(movieId)
print(movieProfile1)
print(cosine(avg, movieProfile1))
}
similarities <- data.frame()
columnNamesSimilarities <- c("movieId", "similarity")
colnames(similarities) <- columnNamesSimilarities
similarities <- data.frame(0,0)
columnNamesSimilarities <- c("movieId", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
print(movieId)
print(movieProfile1)
similarity <- cosine(avg, movieProfile1)
similarities[row, movieId] <- movieId
similarities[row, similarity] <- similarity
}
similarities <- data.frame(0,0)
columnNamesSimilarities <- c("movieId", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
print(movieId)
print(movieProfile1)
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- similarity
}
View(similarities)
View(similarities)
similarities <- data.frame(0,0)
columnNamesSimilarities <- c("movieId", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- similarity
}
similarities <- similarities(order(similarity))
similarities <- similarities[order(similarity)]
similarities
similarities <- data.frame(0,0)
columnNamesSimilarities <- c("movieId", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- similarity
}
similarities <- similarities[order(similarity)]
similarities
View(similarity)
similarities <- data.frame(0,0)
columnNamesSimilarities <- c("movieId", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- similarity
}
View(similarities)
similarities <- similarities[order(2)]
similarities
similarities <- data.frame(0,0)
columnNamesSimilarities <- c("movieId", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- similarity
}
similarities
similarities <- similarities[order(similarity),]
similarities
similarities <- data.frame(0,0)
columnNamesSimilarities <- c("movieId", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- similarity
}
similarities <- similarities[order(-similarity),]
similarities
similarities <- data.frame(0,0)
columnNamesSimilarities <- c("movieId", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- similarity
}
similarities <- similarities[order(-2),]
similarity
similarities
similarities <- data.frame(0,0)
columnNamesSimilarities <- c("movieId", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- similarity
}
similarities <- similarities[order(-1),]
similarities
similarities <- data.frame(0,0)
columnNamesSimilarities <- c("movieId", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- similarity
}
similarities <- similarities[order(similarity, movieId),]
similarities
similarities <- data.frame(0,0)
columnNamesSimilarities <- c("movieId", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- similarity
}
similarities <- similarities[order(similarities$similarity), ]
similarities
similarities <- similarities[order(-similarities$similarity), ]
similarities
movieProfile
movieName <- movies(which(movies, movies$movieId == movieId))
movieName <- movies[which(movies, movies$movieId == movieId)]
movieName <- movies[which(movies$movieId == movieId)]
movieName <- movies[which(movies$movieId == movieId), ]
movieName
movieName <- movies[which(movies$movieId == movieId), 2]
movieName
similarities <- data.frame(0,"",0)
columnNamesSimilarities <- c("movieId", "movieName", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieName <- movies[which(movies$movieId == movieId), 2]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- movieName
similarities[row, 3] <- similarity
}
similarities <- similarities[order(-similarities$similarity), ]
similarities
similarities <- data.frame(0," ",0)
columnNamesSimilarities <- c("movieId", "movieName", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieName <- movies[which(movies$movieId == movieId), 2]
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- movieName
similarities[row, 3] <- similarity
}
similarities <- similarities[order(-similarities$similarity), ]
similarities <- data.frame(0," ",0)
columnNamesSimilarities <- c("movieId", "movieName", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieName <- toString(movies[which(movies$movieId == movieId), 2])
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- movieName
similarities[row, 3] <- similarity
}
similarities <- similarities[order(-similarities$similarity), ]
movieName <- toString(movies[which(movies$movieId == 1), 2])
movieName
movieId <- movieProfile[r1ow, 1]
movieId <- movieProfile[1, 1]
movieId
similarities <- data.frame(0," ",0)
columnNamesSimilarities <- c("movieId", "movieName", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieName <- toString(movies[which(movies$movieId == movieId), 2])
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- as.factor(movieName)
similarities[row, 3] <- similarity
}
similarities <- similarities[order(-similarities$similarity), ]
movieName <- toString(movies[which(movies$movieId == 1), 2])
movieName
movieName <- as.factor(movieName)
movieName
similarities <- data.frame(0," ",0)
columnNamesSimilarities <- c("movieId", "movieName", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieName <- toString(movies[which(movies$movieId == movieId), 2])
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- movieName
similarities[row, 3] <- similarity
}
similarities <- similarities[order(-similarities$similarity), ]
mostSimilar <- head(similarities, 5)
print("User ID " + userId + "chose the following ten movies:")
print(c("User ID ", userId, "chose the following ten movies:")
print(moviesSampled$movieId)
print(c("User ID ", userId, "chose the following ten movies:"))
print(moviesSampled$movieId)
print("Of these, the following 5 movies are recommended:")
print(mostSimilar)
print(c(User ID , userId, chose the following ten movies:))
print(mostSimilar)
movieName <- toString(movies[which(movies$movieId == 1), 2])
movieName
similarities <- data.frame(0," ",0)
columnNamesSimilarities <- c("movieId", "movieName", "similarity")
colnames(similarities) <- columnNamesSimilarities
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieName <-(movies[which(movies$movieId == movieId), 2])
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- movieName
similarities[row, 3] <- similarity
}
similarities <- similarities[order(-similarities$similarity), ]
mostSimilar <- head(similarities, 5)
similarities <- data.frame(0," ",0)
columnNamesSimilarities <- c("movieId", "movieName", "similarity")
colnames(similarities) <- columnNamesSimilarities
similarities$movieName <- toString(similarities$movieName)
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieName <- toString(movies[which(movies$movieId == movieId), 2])
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- movieName
similarities[row, 3] <- similarity
}
similarities <- similarities[order(-similarities$similarity), ]
mostSimilar <- head(similarities, 5)
print(c("User ID ", userId, "chose the following ten movies:"))
print(moviesSampled$movieId)
print("Of these, the following 5 movies are recommended:")
print(mostSimilar)
CWID = 20433490
userId = CWID %% 671
moviesSampled <- sample_n(movies, 10)
indices <- which(ratings$userId == userId)
ratedMovies <- ratings[indices, ]
genres <- c()
userProfile <- data.frame(movieId=integer(), Action=integer(), Adventure=integer(), Animation=integer(), Children=integer(), Comedy=integer(), Crime=integer(), Documentary=integer(), Drama=integer(), Fantasy=integer(), FilmNoir=integer(), Horror=integer(), IMAX=integer(), Musical=integer(), Mystery=integer(), Romance=integer(), SciFi=integer(), Thriller=integer(), War=integer(), Western=integer(), NoGenre=integer(), stringsAsFactors=FALSE)
columnNames <- c("movieId", "Action", "Adventure", "Animation", "Children", "Comedy", "Crime", "Documentary", "Drama", "Fantasy",
"Film-Noir", "Horror", "IMAX", "Musical", "Mystery", "Romance", "Sci-Fi", "Thriller", "War", "Western", "(no
genres listed)")
userProfile <- data.frame(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
colnames(userProfile) <- columnNames
for(i in 1:length(ratedMovies[,1])){
userProfile[i, ] <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
}
for(row in 1:nrow(ratedMovies)){
movieId <- ratedMovies[row, 2]
indexMovie <- which(movies$movieId == movieId)
genres_split <- strsplit(toString(movies[indexMovie, 3]), "[|]")[[1]]
for (i in 1:length(ratedMovies[,1])){
userProfile[row, 1] <- movieId
for (genre in genres_split){
userProfile[row, genre] <- 1
}
}
}
avg <- c(mean(userProfile[, 2]), mean(userProfile[, 3]), mean(userProfile[, 4]), mean(userProfile[, 5]), mean(userProfile[, 6]), mean(userProfile[, 7]), mean(userProfile[, 8]), mean(userProfile[, 9]), mean(userProfile[, 10]), mean(userProfile[, 11]), mean(userProfile[, 12]), mean(userProfile[, 13]), mean(userProfile[, 14]), mean(userProfile[, 15]), mean(userProfile[, 16]), mean(userProfile[, 17]), mean(userProfile[, 18]), mean(userProfile[, 19]), mean(userProfile[, 20]), mean(userProfile[, 21]))
movieProfile <- data.frame(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
colnames(movieProfile) <- columnNames
for(i in 1:length(moviesSampled[,1])){
movieProfile[i, ] <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
}
for(row in 1:nrow(moviesSampled)){
movieId <- moviesSampled[row, 1]
indexMovie <- which(movies$movieId == movieId)
genres_split <- strsplit(toString(movies[indexMovie, 3]), "[|]")[[1]]
for (i in 1:length(moviesSampled[,1])){
movieProfile[row, 1] <- movieId
for (genre in genres_split){
movieProfile[row, genre] <- 1
}
}
}
similarities <- data.frame(0," ",0)
columnNamesSimilarities <- c("movieId", "movieName", "similarity")
colnames(similarities) <- columnNamesSimilarities
similarities$movieName <- toString(similarities$movieName)
for(row in 1:nrow(movieProfile)){
movieId <- movieProfile[row, 1]
movieName <- toString(movies[which(movies$movieId == movieId), 2])
movieProfile1 <- as.numeric(as.vector(movieProfile[row, ][-1]))
similarity <- cosine(avg, movieProfile1)
similarities[row, 1] <- movieId
similarities[row, 2] <- movieName
similarities[row, 3] <- similarity
}
similarities <- similarities[order(-similarities$similarity), ]
mostSimilar <- head(similarities, 5)
print(c("User ID ", userId, "chose the following ten movies:"))
print(moviesSampled$movieId)
print("Of these, the following 5 movies are recommended:")
print(mostSimilar)
moviesNames
moviesNames[-1]
moviesNames
moviesNames[-1,]
moviesNames[,]
moviesNames
moviesNames[,]
moviesNames <- moviesNames[,]
for (i in 1:671){
indices <- which(usersMovies.df[1] == i)
moviesNames <- data.frame(usersMovies.df[indices, 2])[,]
fileName <- paste("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies/user", i, ".csv", sep="")
write.csv(moviesNames, file = fileName, row.names = FALSE)
}
for (i in 1:671){
indices <- which(usersMovies.df[1] == i)
moviesNames <- data.frame(usersMovies.df[indices, 2])[,]
fileName <- paste("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies/user", i, ".csv", sep="")
write.csv(moviesNames, file = fileName, row.names = FALSE)
}
files <- list.files("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies", full.names=T)
minhash <- minhash_generator(n=18, seed=100)
corpus <- TextReuseCorpus(files, tokenizer = tokenize_ngrams, n = 5, keep_tokens = TRUE, minhash_func = minhash)
head(minhashes(corpus[["user20"]]), 5)
buckets <- lsh(corpus, bands = 9)
candidates <- lsh_candidates(buckets)
res <- lsh_compare(candidates, corpus, jaccard_similarity)
indices <- which(res$score >= 0.40)
pairs04 <- res[indices, ]
pairs04
rm(list=ls())
setwd("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4")
movies <- read.csv("movies.csv", sep = ",", header = TRUE)
ratings <- read.csv("ratings.csv", sep = ",", header = TRUE)
setwd("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies")
joined <- merge(x = ratings, y = movies, by = "movieId", all = TRUE)
usersMovies.df = data.frame(joined$userId, joined$title)
for (i in 1:671){
indices <- which(usersMovies.df[1] == i)
moviesNames <- data.frame(usersMovies.df[indices, 2])[,]
fileName <- paste("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies/user", i, ".csv", sep="")
write.csv(moviesNames, file = fileName, row.names = FALSE)
}
for (i in 1:671){
indices <- which(usersMovies.df[1] == i)
moviesNames <- data.frame(usersMovies.df[indices, 2])[,]
fileName <- paste("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies/user", i, ".csv", sep="")
write.csv(moviesNames, file = fileName, row.names = FALSE, col.names = FALSE)
}
for (i in 1:671){
indices <- which(usersMovies.df[1] == i)
moviesNames <- data.frame(usersMovies.df[indices, 2])[,]
fileName <- paste("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies/user", i, ".csv", sep="")
write.csv(moviesNames, file = fileName, row.names = FALSE)
temp <- read.csv(fileName, sep = ",")
temp <- temp[-1]
write.csv(temp, file = fileName, row.names = FALSE)
}
for (i in 1:671){
indices <- which(usersMovies.df[1] == i)
moviesNames <- data.frame(usersMovies.df[indices, 2])[,]
fileName <- paste("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies/user", i, ".csv", sep="")
write.csv(moviesNames, file = fileName, row.names = FALSE)
temp <- read.csv(fileName, sep = ",")
temp <- temp
write.csv(temp, file = fileName, row.names = FALSE)
}
for (i in 1:671){
indices <- which(usersMovies.df[1] == i)
moviesNames <- data.frame(usersMovies.df[indices, 2])[,]
fileName <- paste("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies/user", i, ".csv", sep="")
write.csv(moviesNames, file = fileName, row.names = FALSE)
temp <- read.csv(fileName, sep = ",")
temp <- temp[-1, ]
write.csv(temp, file = fileName, row.names = FALSE)
}
for (i in 1:671){
indices <- which(usersMovies.df[1] == i)
moviesNames <- data.frame(usersMovies.df[indices, 2])[,]
fileName <- paste("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies/user", i, ".csv", sep="")
write.csv(moviesNames, file = fileName, row.names = FALSE)
temp <- read.csv(fileName, sep = ",")
temp <- temp[-1,]
write.csv(temp, file = fileName, row.names = FALSE)
}
for (i in 1:671){
indices <- which(usersMovies.df[1] == i)
moviesNames <- data.frame(usersMovies.df[indices, 2])[,]
fileName <- paste("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies/user", i, ".csv", sep="")
write.csv(moviesNames, file = fileName, row.names = FALSE)
temp <- read.csv(fileName, sep = ",", header = TRUE)
write.csv(temp, file = fileName, row.names = FALSE)
}
for (i in 1:671){
indices <- which(usersMovies.df[1] == i)
moviesNames <- data.frame(usersMovies.df[indices, 2])[,]
fileName <- paste("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies/user", i, ".csv", sep="")
write.csv(moviesNames, file = fileName, row.names = FALSE)
temp <- read.csv(fileName, sep = ",", header = FALSE)
temp <- temp[-1,]
write.csv(temp, file = fileName, row.names = FALSE)
}
for (i in 1:671){
indices <- which(usersMovies.df[1] == i)
moviesNames <- data.frame(usersMovies.df[indices, 2])[,]
fileName <- paste("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies/user", i, ".csv", sep="")
write.csv(moviesNames, file = fileName, row.names = FALSE)
temp <- read.csv(fileName, sep = ",", header = FALSE, skip = 1)
write.csv(temp, file = fileName, row.names = FALSE)
}
for (i in 1:671){
indices <- which(usersMovies.df[1] == i)
moviesNames <- data.frame(usersMovies.df[indices, 2])[,]
fileName <- paste("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies/user", i, ".csv", sep="")
write.csv(moviesNames, file = fileName, row.names = FALSE)
temp <- read.csv(fileName, sep = ",", skip = 1)
write.csv(temp, file = fileName, row.names = FALSE)
}
files <- list.files("/Users/JavierMoreno/Desktop/Chicago/courses/CS422 Data Mining/hw4/hw4.movies", full.names=T)
minhash <- minhash_generator(n=18, seed=100)
corpus <- TextReuseCorpus(files, tokenizer = tokenize_ngrams, n = 5, keep_tokens = TRUE, minhash_func = minhash)
head(minhashes(corpus[["user20"]]), 5)
buckets <- lsh(corpus, bands = 9)
candidates <- lsh_candidates(buckets)
res <- lsh_compare(candidates, corpus, jaccard_similarity)
indices <- which(res$score >= 0.40)
pairs04 <- res[indices, ]
pairs04
corpus <- TextReuseCorpus(files, tokenizer = tokenize_ngrams, n = 5, keep_tokens = TRUE)
length(names(corpus))
shingles <- c()
for (name in names(corpus)){
shinglesDocument <- tokens(corpus[[name]])
for (shingle in shinglesDocument){
if (shingle %in% shingles == FALSE){
shingles <- c(shingles, shingle)
}
}
}
length(shingles)
d <- corpus[["user20"]]
head(tokens(d), 5)
candidates <- pairwise_candidates(pairwise_compare(corpus, jaccard_similarity))
length(which(candidates$score >= 0.60))
length(which(candidates$score >= 0.50))
length(which(candidates$score >= 0.40))
indices <- which(candidates$score >= 0.40)
pairs04 <- candidates[indices, ]
pairs04
